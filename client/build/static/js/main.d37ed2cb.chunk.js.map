{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","textToSearch","setTextToSearch","velocityToDowload","setVelocityToDowload","className","onClick","e","axios","get","then","res","console","log","data","url","window","open","type","id","placeholder","onChange","target","value","post","address","velocity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA8CeA,MA1Cf,WAEE,IAAI,EAAkCC,mBAAS,IAA/C,mBAAKC,EAAL,KAAmBC,EAAnB,KACI,EAA4CF,mBAAS,OAAzD,mBAAKG,EAAL,KAAwBC,EAAxB,KA0BA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wBAAQA,UAAU,sBAAsBC,QA3BxB,SAACC,GAErBC,IAAMC,IAAI,oCAAoCC,MAAK,SAAAC,GACjDC,QAAQC,IAAIF,EAAIG,KAAKC,KACrBC,OAAOC,KAAKN,EAAIG,KAAKC,IAAK,SAAU,2BAuBlC,4BACA,uBAAOG,KAAK,OAAOC,GAAG,YAAYd,UAAU,cAAce,YAAY,sBAAsBC,SAAU,SAACd,GAAD,OAAOL,EAAgBK,EAAEe,OAAOC,UACtI,wBAAQjB,QAtBG,SAACC,GAChBC,IAAMgB,KAAN,yCAAqD,CAAEC,QAASxB,IAC7DS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,OAmBZ,iBACA,uBAAOO,KAAK,OAAOC,GAAG,YAAYd,UAAU,cAAce,YAAY,4CAA4CC,SAAU,SAACd,GAAD,OAAOH,EAAqBG,EAAEe,OAAOC,UACjK,wBAAQjB,QAjBQ,SAACC,GACrBC,IAAMgB,KAAN,sCAAkD,CAAEC,QAASxB,EAAayB,SAAUvB,IACjFO,MAAK,SAAAC,GACJC,QAAQC,IAAIF,OAcZ,4BC1BOgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d37ed2cb.chunk.js","sourcesContent":["import axios from 'axios';\nimport './App.css';\nimport React, { useState } from 'react'\n\nfunction App() {\n\n  var [textToSearch, setTextToSearch] = useState('')\n  var [velocityToDowload, setVelocityToDowload] = useState('332')\n  // onClick of startSession_button\n  const loginFunction = (e: any) => {\n\n    axios.get(\"http://localhost:3001/getAuthURL\").then(res => {\n      console.log(res.data.url)\n      window.open(res.data.url, '_blank', 'noopener,noreferrer')\n    })\n  }\n  const startMap = (e: any) => {\n    axios.post(`http://localhost:3001/mapFilesOnedrive`, { address: textToSearch })\n      .then(res => {\n        console.log(res);\n        //console.log(res.data);\n      })\n  }\n  const startDownload = (e: any) => {\n    axios.post(`http://localhost:3001/startDownload`, { address: textToSearch,velocity: velocityToDowload })\n      .then(res => {\n        console.log(res);\n        //console.log(res.data);\n      })\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button className=\"startSession_button\" onClick={loginFunction}>Inicia session</button>\n        <input type=\"text\" id='inputText' className='searchInput' placeholder='Path where download' onChange={(e) => setTextToSearch(e.target.value)} />\n        <button onClick={startMap}>Map</button>\n        <input type=\"text\" id='inputText' className='searchInput' placeholder='Velocity to download in ms, default 332ms' onChange={(e) => setVelocityToDowload(e.target.value)} />\n        <button onClick={startDownload}>Download</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}